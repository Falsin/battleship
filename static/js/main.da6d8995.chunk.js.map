{"version":3,"sources":["components/Footer.js","components/header.js","factoriesFunc/player.js","components/componentsForMainContent/RegistComp.js","factoriesFunc/ship.js","factoriesFunc/gameBoard.js","components/componentsForMainContent/componentsForGame/Cell.js","components/componentsForMainContent/componentsForGame/Row.js","components/componentsForMainContent/componentsForGame/Board.js","components/componentsForMainContent/GameComp.js","components/mainContent.js","pages/registrationPage.js","pages/gamePage.js","Routes.js","index.js"],"names":["Wrapper","styled","footer","Footer","href","header","Title","h1","Header","params","humanPlayer","name","setName","selectedName","this","createHumanPlayer","div","Regist","props","placeholder","onBlur","e","target","value","to","ship","shipPart","obj","isDamage","Array","length","fill","map","Object","assign","createShipParts","hit","positionNumber","isSunk","filter","elem","isPlaced","gameBoard","newShipsArray","placeShips","coord","requiredItem","find","vertical","forEach","id","Item","status","key","Cell","contextData","useContext","playersContext","useState","horizontal","isSelected","setIsSelected","console","log","useEffect","check","selectedCells","onMouseEnter","board","createArray","setSelectedCells","onClick","boardForGame","Row","countCells","uniqid","React","createContext","Board","countRows","setBoard","player","setPlayer","isReady","setReadyStatus","objStatus","objBoard","objPlayer","cells","Provider","user","changeContext","horizontalCoord","String","fromCharCode","charCodeAt","Game","makeMove","MainContent","page","Section","section","registrationPage","gamePage","Routes","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da6d8995.chunk.js","sourcesContent":["import styled from \"styled-components\"\n\nconst Wrapper = styled.footer`\n  padding: 2vmin;\n  background: darkblue;\n\n  & a {\n    color: white;\n    text-decoration: none;\n  }\n`;\n\nexport default function Footer() {\n  return (\n    <Wrapper>\n      <a href='https://github.com/Falsin'>Made by Falsin</a>\n    </Wrapper>\n  )\n}","import styled from \"styled-components\"\n\nconst Wrapper = styled.header`\n  background: red;\n  padding: 2vmin;\n  margin: 0;\n`;\n\nconst Title = styled.h1`\n  padding: 0;\n  margin: 0;\n  text-align: center;\n`;\n\nexport default function Header(params) {\n  return (\n    <Wrapper>\n      <Title>Battleship</Title>\n    </Wrapper>\n  )\n}","/* function player() {\n  let name;\n\n  return {name, setName}\n} */\n\nconst createHumanPlayer =  (() => {\n  let name; \n\n  return function () {\n    function setName(selectedName) {\n      name = selectedName;\n      this.name = name;\n    }\n\n    return {name, setName}\n  }\n})()\n\nfunction createBotPlayer() {\n  function makeMove() {\n    /*something */\n  }\n\n  return {makeMove}\n}\n\nlet humanPlayer = createHumanPlayer();\n/* let botPlayer   = player(); */\n\nexport {humanPlayer, createBotPlayer}","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { humanPlayer } from \"../../factoriesFunc/player\";\n\nconst Wrapper = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  & * {\n    padding: 0;\n    margin: 1vmin;\n  }\n\n  & input {\n    padding: 1vmin;\n    border: solid gray 1px;\n    outline: none;\n  }\n\n  a {\n    display: block;\n    border: solid gray 1px;\n    padding: 1vmin;\n    text-decoration: none;\n    color: black;\n  }\n`;\n\n\nexport default function Regist(props) {\n  return (\n    <Wrapper>\n      <h3>Enter player name:</h3>\n      <input placeholder='Combat' onBlur={(e) => humanPlayer.setName(e.target.value)} />\n      <Link to='/gamePage'>Start game</Link>\n    </Wrapper>\n  )\n}","function ship(ship) { \n  let shipPart = createShipParts(ship);\n  let isPlaced = false;\n\n  return {\n    shipPart,\n    hit(positionNumber) {\n      shipPart[positionNumber].isDamage = true;\n    },\n    isSunk() {\n      let hitsCount = shipPart.filter(elem => elem.isDamage).length;\n      return hitsCount === shipPart.length;\n    },\n    isPlaced,\n  }\n}\n\nfunction createShipParts(ship) {\n  let obj = {\n    isDamage: false,\n  }\n\n  return new Array(ship.length).fill().map(() => Object.assign({}, obj));\n}\n\nexport default ship","import ship from \"./ship\";\n\nfunction gameBoard() {\n  let orientation = 'horizontal';\n\n  let shipsArray = [\n    {\n      name: 'carrier',\n      length: 5,\n    },\n    {\n      name: 'battleship',\n      length: 4,\n    },\n    {\n      name: 'Cruiser',\n      length: 3,\n    },\n    {\n      name: 'submarine',\n      length: 3,\n    },\n    {\n      name: 'destroyer',\n      length: 2,\n    },\n  ]\n\n  let newShipsArray = shipsArray.map(elem => {\n    return {\n      ...elem,\n      ...ship(elem),\n    }\n  })\n\n  function changeOrientation() {\n    this.orientation = (this.orientation === 'vertical') ? 'horizontal' : 'vertical';\n  }\n\n  function placeShips(coord) {\n    let requiredItem = newShipsArray.find(elem => !elem.isPlaced);\n\n    if (orientation === 'horizontal') {\n      if (coord.vertical + requiredItem.length < 11) {\n        requiredItem.shipPart.forEach((elem, id) => {\n          elem.coord = Object.assign({}, coord, {vertical: coord.vertical + id});\n        });\n        return requiredItem;\n      } else {\n        return 'Invalid value';\n      }\n    } else {\n      let maxValue = 'J'.charCodeAt(0);\n      if (coord.vertical.charCodeAt(0) + requiredItem.length <= maxValue) {\n        requiredItem.shipPart.forEach((elem, id) => {\n          elem.coord = Object.assign({}, coord, {horizontal: String.fromCharCode( ((coord.horizontal).charCodeAt(0) + id)) });\n        });\n      }\n    }\n  }\n\n  return {\n    placeShips,\n    newShipsArray,\n  }\n}\n\nexport default gameBoard;","import { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { playersContext } from './Board';\n\nconst Item = styled.div`\n  width: 3vmin;\n  height: 3vmin;\n  background:  ${props => props.status.key ? 'gray' : `rgb(66, 66, 255)`};\n  border: solid white 1px;\n`;\n\nexport default function Cell(props) {\n\n  const contextData = useContext(playersContext);\n  const [coord] = useState({horizontal: props.horizontal, vertical: props.vertical});\n  const [isSelected, setIsSelected] = useState(false);\n\n  console.log(contextData)\n\n  useEffect(() => {\n    let check = contextData.selectedCells.find(elem => {\n      return elem.vertical === coord.vertical && elem.horizontal === coord.horizontal;\n    })\n\n    console.log(check)\n\n    if (check) {\n      setIsSelected(true);\n      console.log('work')\n    } else {\n      setIsSelected(false);\n    }\n  }, [isSelected])\n\n  return (\n    <Item\n    onMouseEnter={() => {\n      //console.log()\n      let array = contextData.board.board.newShipsArray;\n      let requiredItem = array.find(elem => !elem.isPlaced);\n\n      if (coord.vertical + requiredItem.length < 11) {\n        let createArray = new Array(requiredItem.length).fill().map((elem, id) => Object.assign({}, coord, {vertical: coord.vertical + id}))\n        \n      \n        contextData.selectedCells.setSelectedCells(createArray)\n      } else {\n        return 'Invalid value';\n      }\n    }} \n    onClick={() => console.log(contextData.board.boardForGame.placeShips(coord))} status={{key: isSelected}} />\n  )\n}","import Cell from \"./Cell\";\nimport uniqid from 'uniqid';\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\n\nexport default function Row(props) {\n  function createCells() {\n    return new Array(props.countCells).fill().map((elem, id) => <Cell vertical={++id} horizontal={props.horizontal} key={uniqid()} />)\n  }\n\n  return (\n    <Wrapper>\n      {createCells().map(elem => elem)}\n    </Wrapper>\n  )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport uniqid from 'uniqid';\nimport gameBoard from '../../../factoriesFunc/gameBoard';\nimport Row from './Row';\n\nlet playersContext = React.createContext(null);\n\nexport default function Board(props) {\n\n  const [board, setBoard] = useState(gameBoard())\n  const [player, setPlayer] = useState(props.player);\n  const [isReady, setReadyStatus] = useState(false);\n  const [selectedCells, setSelectedCells] = useState([])\n\n  let objStatus = {isReady, setReadyStatus};\n  let objBoard = {board, setBoard};\n  let objPlayer = {player, setPlayer};\n  let cells = {selectedCells, setSelectedCells}\n\n\n/*   useEffect(() => {\n\n  }) */\n\n  function createBoardTemplate(countRows, countCells) {\n    return new Array(countRows).fill()\n    .map((elem, id) => {\n      let horizontalCoord = String.fromCharCode('A'.charCodeAt(0) + id);\n      return <Row horizontal={horizontalCoord} key={uniqid()} countCells={countCells} />\n    });\n  }\n\n  return (\n    <playersContext.Provider value={{user: objPlayer, status: objStatus, board: objBoard, selectedCells: cells, changeContext: () => {}}}>\n      <div>\n        {createBoardTemplate(10, 10).map(elem => elem)}\n      </div>\n    </playersContext.Provider>\n  )\n}\n\nexport { playersContext };","import styled from \"styled-components\";\nimport Board from './componentsForGame/Board'\nimport { humanPlayer, createBotPlayer } from \"../../factoriesFunc/player\";\n\nconst Wrapper = styled.div`\n  #gameBoards {\n    display: flex;\n    justify-content: space-around;\n  }\n`;\n\nexport default function Game() {\n  return (\n    <Wrapper>\n      <div id='gameBoards'>\n        <Board player={humanPlayer} />\n        <Board player={createBotPlayer()} />\n      </div>\n    </Wrapper>\n  )\n}","import Regist from \"./componentsForMainContent/RegistComp\";\nimport Game from \"./componentsForMainContent/GameComp\";\n\nexport default function MainContent(props) {\n  return (\n    (props.page === 'registration') ? <Regist /> : <Game />\n  )\n}","import styled from \"styled-components\";\nimport Footer from \"../components/Footer\";\nimport Header from \"../components/header\";\nimport MainContent from \"../components/mainContent\";\n\nconst Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\nexport default function registrationPage(params) {\n  return (\n    <Section>\n      <Header />\n      <MainContent page={'registration'} />\n      <Footer />\n    </Section>\n  )\n}","import Header from \"../components/header\";\nimport Footer from \"../components/Footer\";\nimport MainContent from \"../components/mainContent\";\n\nfunction gamePage(params) {\n  return (\n    <section>\n      <Header />\n      <MainContent />\n      <Footer />\n    </section>\n  )\n}\n\nexport default gamePage;","import { HashRouter, Switch, Route } from \"react-router-dom\";\nimport registrationPage from \"./pages/registrationPage\";\nimport gamePage from \"./pages/gamePage\";\n\nfunction Routes() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path='/' component={registrationPage} />\n        <Route exact path='/gamePage' component={gamePage} />\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\nimport style from './style.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}