{"version":3,"sources":["components/Footer.js","components/header.js","factoriesFunc/player.js","components/componentsForMainContent/RegistComp.js","factoriesFunc/ship.js","factoriesFunc/gameBoard.js","components/componentsForMainContent/componentsForGame/Cell.js","components/componentsForMainContent/componentsForGame/Board.js","components/componentsForMainContent/GameComp.js","components/mainContent.js","pages/registrationPage.js","pages/gamePage.js","Routes.js","index.js"],"names":["Wrapper","styled","footer","Footer","href","header","Title","h1","Header","params","humanPlayer","name","setName","selectedName","this","createHumanPlayer","div","Regist","props","placeholder","onBlur","e","target","value","to","ship","shipPart","obj","isDamage","Array","length","fill","map","Object","assign","createShipParts","hit","positionNumber","isSunk","filter","elem","isPlaced","gameBoard","selectedCells","newShipsArray","placeShips","index","hoveredCells","find","forEach","id","coord","push","checkCellAssing","includes","addCellsIntoHoveredCells","isReady","Square","error","key","status","hover","CreateCell","useState","isSelected","setIsSelected","isError","setIsError","isHover","setIsHover","useEffect","array","state","board","item","onClick","cloneBoard","findElem","setBoard","arrangeShips","onMouseEnter","shipHover","comprasionOfProps","prevProps","nextProps","Cell","React","memo","Board","countRows","Game","player","makeMove","MainContent","page","Section","section","registrationPage","gamePage","Routes","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.044a2f02.chunk.js","sourcesContent":["import styled from \"styled-components\"\n\nconst Wrapper = styled.footer`\n  padding: 2vmin;\n  background: darkblue;\n\n  & a {\n    color: white;\n    text-decoration: none;\n  }\n`;\n\nexport default function Footer() {\n  return (\n    <Wrapper>\n      <a href='https://github.com/Falsin'>Made by Falsin</a>\n    </Wrapper>\n  )\n}","import styled from \"styled-components\"\n\nconst Wrapper = styled.header`\n  background: red;\n  padding: 2vmin;\n  margin: 0;\n`;\n\nconst Title = styled.h1`\n  padding: 0;\n  margin: 0;\n  text-align: center;\n`;\n\nexport default function Header(params) {\n  return (\n    <Wrapper>\n      <Title>Battleship</Title>\n    </Wrapper>\n  )\n}","/* function player() {\n  let name;\n\n  return {name, setName}\n} */\n\nconst createHumanPlayer =  (() => {\n  let name; \n\n  return function () {\n    function setName(selectedName) {\n      name = selectedName;\n      this.name = name;\n    }\n\n    return {name, setName}\n  }\n})()\n\nfunction createBotPlayer() {\n  function makeMove() {\n    /*something */\n  }\n\n  return {makeMove}\n}\n\nlet humanPlayer = createHumanPlayer();\n/* let botPlayer   = player(); */\n\nexport {humanPlayer, createBotPlayer}","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { humanPlayer } from \"../../factoriesFunc/player\";\n\nconst Wrapper = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  & * {\n    padding: 0;\n    margin: 1vmin;\n  }\n\n  & input {\n    padding: 1vmin;\n    border: solid gray 1px;\n    outline: none;\n  }\n\n  a {\n    display: block;\n    border: solid gray 1px;\n    padding: 1vmin;\n    text-decoration: none;\n    color: black;\n  }\n`;\n\n\nexport default function Regist(props) {\n  return (\n    <Wrapper>\n      <h3>Enter player name:</h3>\n      <input placeholder='Combat' onBlur={(e) => humanPlayer.setName(e.target.value)} />\n      <Link to='/gamePage'>Start game</Link>\n    </Wrapper>\n  )\n}","function ship(ship) { \n  let shipPart = createShipParts(ship);\n  let isPlaced = false;\n\n  return {\n    shipPart,\n    hit(positionNumber) {\n      shipPart[positionNumber].isDamage = true;\n    },\n    isSunk() {\n      let hitsCount = shipPart.filter(elem => elem.isDamage).length;\n      return hitsCount === shipPart.length;\n    },\n    isPlaced,\n  }\n}\n\nfunction createShipParts(ship) {\n  let obj = {\n    isDamage: false,\n  }\n\n  return new Array(ship.length).fill().map(() => Object.assign({}, obj));\n}\n\nexport default ship","import ship from \"./ship\";\n\nfunction gameBoard() {\n  let orientation = 'horizontal';\n  let selectedCells = [];\n  let hoveredCells = [];\n  let isReady = false;\n\n  let shipsArray = [\n    {\n      name: 'carrier',\n      length: 5,\n    },\n    {\n      name: 'battleship',\n      length: 4,\n    },\n    {\n      name: 'Cruiser',\n      length: 3,\n    },\n    {\n      name: 'submarine',\n      length: 3,\n    },\n    {\n      name: 'destroyer',\n      length: 2,\n    },\n  ]\n\n  let newShipsArray = shipsArray.map(elem => {\n    return {\n      ...elem,\n      ...ship(elem),\n    }\n  })\n\n  function changeOrientation() {\n    this.orientation = (this.orientation === 'vertical') ? 'horizontal' : 'vertical';\n  }\n\n  function placeShips(index) {\n    this.hoveredCells = [];\n    let findElem = newShipsArray.find(elem => !elem.isPlaced)\n\n    if (orientation === 'horizontal') {\n      findElem.shipPart.forEach((elem, id) => {\n        elem.coord = index + id;\n        selectedCells.push(index + id)\n      })\n    }\n  }\n\n  function checkCellAssing(coord) {\n    return !selectedCells.includes(coord);\n  }\n\n  function addCellsIntoHoveredCells(ship, index) {\n    this.hoveredCells = [];\n\n    ship.shipPart.forEach((elem, id) => {\n      this.hoveredCells.push(index + id)\n    });\n  }\n\n  return {\n    placeShips,\n    checkCellAssing,\n    newShipsArray,\n    addCellsIntoHoveredCells,\n    hoveredCells,\n    selectedCells,\n    isReady,\n  }\n}\n\nexport default gameBoard;","import React, {useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Square = styled.div`\n  background: ${(props) => {\n    return  (props.error.key) ? 'red' : \n            (props.status.key || props.hover.key) ? 'gray' : `rgb(66, 66, 255)`\n  }};\n  border: solid white 1px;\n`;\n\nconst Cell = React.memo(CreateCell, comprasionOfProps);\n\nfunction CreateCell (props) {\n  //console.log('work')\n    const [isSelected, setIsSelected] = useState(false);\n    const [isError, setIsError]       = useState(false);\n    const [isHover, setIsHover]       = useState(false);\n\n  useEffect(() => {\n    const array = props.state.board.newShipsArray;\n    const board = props.state.board;\n\n    if (board.hoveredCells.includes(props.index)) {\n      if (board.selectedCells.includes(props.index)) {\n        setIsError(true);\n      } else {\n        setIsHover(true);\n      }\n    } else {\n      if (isHover) {\n        setIsHover(false);\n      }\n      setIsError(false);\n\n      for (const item of array) {\n        if (item.isPlaced) {\n          let condition = item.shipPart.find(elem => elem.coord === props.index)\n      \n          if (condition) {\n            setIsSelected(true);\n          }\n        }\n      }\n    }\n  })\n  \n  function arrangeShips() {\n    let cloneBoard = Object.assign({}, props.state.board);\n    let findElem = cloneBoard.newShipsArray.find(elem => !elem.isPlaced);\n\n    if (findElem) {\n      if (cloneBoard.checkCellAssing(props.index)) {\n  \n        let remainderOfDivision = props.index % 10;\n    \n        if (remainderOfDivision + findElem.length <= 10) {\n          cloneBoard.placeShips(props.index);\n          findElem.isPlaced = true;\n\n          let findItem = cloneBoard.newShipsArray.find(elem => !elem.isPlaced);\n\n          if (!findItem) {\n            cloneBoard.isReady = true;\n          }\n\n          props.state.setBoard(cloneBoard);\n        }\n      }\n    } \n  }\n\n  function shipHover() {\n    let cloneBoard = Object.assign({}, props.state.board);\n    let findElem = cloneBoard.newShipsArray.find(elem => !elem.isPlaced);\n\n    let remainderOfDivision = props.index % 10;\n    if (remainderOfDivision + findElem.length <= 10) {\n      cloneBoard.addCellsIntoHoveredCells(findElem, props.index);\n      props.state.setBoard(cloneBoard);\n    }\n\n    /* if (cloneBoard.checkCellAssing(props.index)) {\n      let remainderOfDivision = props.index % 10;\n  \n      if (remainderOfDivision + findElem.length <= 10) {\n        cloneBoard.addCellsIntoHoveredCells(findElem, props.index);\n        props.state.setBoard(cloneBoard);\n      }\n    } else {\n      cloneBoard.addCellsIntoHoveredCells(findElem, props.index);\n      props.state.setBoard(cloneBoard);\n    } */\n  }\n  \n    return (\n      <Square \n      onClick={() => props.state.board.isReady ? null : arrangeShips()} \n      onMouseEnter={() => props.state.board.isReady ? null : shipHover()}\n      status={{key: isSelected}} error={{key: isError}} hover={{key: isHover}}>{props.index}</Square>\n    )\n}\n\nfunction comprasionOfProps(prevProps, nextProps) {\n  if (nextProps.state.board.hoveredCells.includes(nextProps.index) || prevProps.state.board.hoveredCells.includes(nextProps.index)) {\n    return false;\n  } else if (prevProps.state.board.isReady !== nextProps.state.board.isReady) {\n    return false\n  } else {\n    const array = nextProps.state.board.newShipsArray;\n\n    for (const item of array) {\n      if (item.isPlaced) {\n        let condition = item.shipPart.find(elem => elem.coord === nextProps.index)\n\n        if (condition) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\n\nexport default Cell;\n\n//было 124 строчки","import React, { useState } from 'react';\nimport uniqid from 'uniqid';\nimport gameBoard from '../../../factoriesFunc/gameBoard';\nimport styled from \"styled-components\";\nimport Cell from './Cell';\nimport { useEffect } from 'react/cjs/react.development';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(10, 4vmin);\n  grid-template-rows: repeat(10, 4vmin);  \n`;\n\n\nexport default function Board(props) {\n  const [board, setBoard] = useState(gameBoard());\n\n  function createBoardTemplate(countRows) {\n    return new Array(countRows).fill().map((elem, id) => <Cell key={id} index={id} state={{board, setBoard}} />);\n  }\n\n  return (\n    <div>\n      <Wrapper>\n        {createBoardTemplate(100)}\n      </Wrapper>\n    </div>\n  )\n}","import styled from \"styled-components\";\nimport Board from './componentsForGame/Board'\nimport { humanPlayer, createBotPlayer } from \"../../factoriesFunc/player\";\n\nconst Wrapper = styled.div`\n  #gameBoards {\n    display: flex;\n    justify-content: space-around;\n  }\n`;\n\nexport default function Game() {\n  return (\n    <Wrapper>\n      <div id='gameBoards'>\n        <Board player={humanPlayer} />\n        <Board player={createBotPlayer()} />\n      </div>\n    </Wrapper>\n  )\n}","import Regist from \"./componentsForMainContent/RegistComp\";\nimport Game from \"./componentsForMainContent/GameComp\";\n\nexport default function MainContent(props) {\n  return (\n    (props.page === 'registration') ? <Regist /> : <Game />\n  )\n}","import styled from \"styled-components\";\nimport Footer from \"../components/Footer\";\nimport Header from \"../components/header\";\nimport MainContent from \"../components/mainContent\";\n\nconst Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\nexport default function registrationPage(params) {\n  return (\n    <Section>\n      <Header />\n      <MainContent page={'registration'} />\n      <Footer />\n    </Section>\n  )\n}","import Header from \"../components/header\";\nimport Footer from \"../components/Footer\";\nimport MainContent from \"../components/mainContent\";\n\nfunction gamePage(params) {\n  return (\n    <section>\n      <Header />\n      <MainContent />\n      <Footer />\n    </section>\n  )\n}\n\nexport default gamePage;","import { HashRouter, Switch, Route } from \"react-router-dom\";\nimport registrationPage from \"./pages/registrationPage\";\nimport gamePage from \"./pages/gamePage\";\n\nfunction Routes() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path='/' component={registrationPage} />\n        <Route exact path='/gamePage' component={gamePage} />\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\nimport style from './style.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}